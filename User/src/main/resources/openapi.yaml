openapi: 3.0.3
info:
  description: |
    Este API REST se encarga de gestionar la información y operaciones relacionadas con los usuarios dentro del microservicio de Usuarios del sistema de Netflix. Proporciona diversos endpoints para manejar el ciclo de vida completo de los usuarios, incluyendo la creación de cuentas, autenticación, actualización de perfiles, y la gestión de preferencias y configuraciones de cada usuario. Permite realizar operaciones CRUD (Crear, Leer, Actualizar, Eliminar) sobre los datos de usuario, asegurando que la información esté siempre segura y actualizada. Esta API facilita la interacción entre el frontend y el backend del sistema, garantizando que los usuarios puedan gestionar fácilmente sus cuentas y preferencias, mejorando la experiencia personalizada y segura dentro de la plataforma.
  title: API de Usuario
  version: "1.0"
servers:
- url: https://api.server/v1/user/
tags:
- description: "Las operaciones relacionadas con el usuario son creación, actualizació\
    n, eliminación, y autenticación."
  name: user
paths:
  /users:
    get:
      description: Obtiene todos los usuarios registrados en la plataforma.
      operationId: getUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Operación exitosa
        "400":
          description: Solicitud inválida
        "404":
          description: Usuarios no encontrados
      summary: Obtiene todos los usuarios
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}:
    delete:
      description: Elimina un usuario de la plataforma usando su ID.
      operationId: deleteUser
      parameters:
      - description: ID del usuario que se desea eliminar
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteUser_200_response'
          description: Usuario eliminado exitosamente
        "400":
          description: ID de usuario inválido proporcionado
        "404":
          description: Usuario no encontrado
      summary: Elimina un usuario existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    get:
      description: Obtiene la información de un usuario específico registrado en la
        plataforma utilizando su ID.
      operationId: getUserById
      parameters:
      - description: ID del usuario que se desea obtener
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Operación exitosa
        "400":
          description: ID de usuario inválido proporcionado
        "404":
          description: Usuario no encontrado
      summary: Obtiene un usuario por su ID
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    put:
      description: Actualiza la información de un usuario existente en la plataforma
        por su ID.
      operationId: updateUser
      parameters:
      - description: ID del usuario que se desea actualizar
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Datos del usuario que se actualizarán
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Usuario actualizado con éxito
        "400":
          description: ID de usuario inválido proporcionado
        "404":
          description: Usuario no encontrado
        "422":
          description: Error de validación
      summary: Actualiza un usuario existente
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user:
    post:
      description: Añade un nuevo usuario a la plataforma.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Datos del nuevo usuario a crear
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Usuario creado con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "409":
          description: Conflicto (el usuario ya existe)
      summary: Crea un nuevo usuario
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/login:
    get:
      description: Permite al usuario iniciar sesión en el sistema con su nombre de
        usuario y contraseña.
      operationId: loginUser
      parameters:
      - description: El nombre de usuario para iniciar sesión
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: La contraseña para iniciar sesión en texto claro
        explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Sesión iniciada exitosamente
        "400":
          description: Nombre de usuario o contraseña inválido(a) proporcionado(a)
      summary: Inicia sesión en el sistema
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/logout:
    get:
      description: Finaliza la sesión del usuario que está actualmente conectado en
        el sistema.
      operationId: logoutUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logoutUser_200_response'
          description: Sesion cerrada exitosamente
      summary: Cierra la sesión del usuario actualmente conectado
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/payment:
    delete:
      description: Permite al usuario eliminar un método de pago existente
      operationId: deletePaymentMethod
      parameters:
      - description: ID del usuario del que se desea eliminar el método de pago
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deletePaymentMethod_200_response'
          description: Metodo de pago eliminado exitosamente
        "400":
          description: ID de usuario o método de pago inválido proporcionado
        "404":
          description: Método de pago no encontrado
      summary: Elimina un método de pago
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    get:
      description: Devuelve el método de pago actual asociado a un usuario específico.
      operationId: getPaymentMethod
      parameters:
      - description: ID del usuario del cual se obtendrá el método de pago
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: Método de pago obtenido con éxito
        "404":
          description: Usuario o método de pago no encontrado
        "400":
          description: Solicitud inválida (datos incorrectos)
      summary: Obtiene el método de pago de un usuario
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    post:
      description: Permite al usuario añadir un nuevo método de pago
      operationId: addPaymentMethod
      parameters:
      - description: ID del usuario al que se le añadirá el método de pago
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
        description: Datos del método de pago a añadir
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: Método de pago obtenido con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
      summary: Añade un método de pago
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/profiles:
    get:
      description: Devuelve una lista de todos los perfiles asociados a un usuario
        específico.
      operationId: listProfiles
      parameters:
      - description: ID del usuario del cual se listarán los perfiles
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Profile'
                type: array
          description: Perfiles listados con éxito
        "404":
          description: Usuario no encontrado
        "400":
          description: Solicitud inválida (datos incorrectos)
      summary: Lista todos los perfiles de un usuario
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    post:
      description: Permite al usuario añadir un nuevo perfil a su cuenta.
      operationId: addProfile
      parameters:
      - description: ID del usuario al que se le añadirá el perfil
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        description: Datos del perfil a añadir
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Perfil añadido con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
      summary: Añade un nuevo perfil
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/profiles/{profileID}:
    delete:
      description: Permite al usuario eliminar un perfil existente utilizando el ID
        del usuario y el ID del perfil.
      operationId: deleteProfile
      parameters:
      - description: ID del usuario del cual se eliminará el perfil
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del perfil que se desea eliminar
        explode: false
        in: path
        name: profileID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteProfile_200_response'
          description: Perfil eliminado exitosamente
        "400":
          description: ID de usuario o perfil inválido proporcionado
        "404":
          description: Perfil no encontrado
      summary: Elimina un perfil existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    get:
      description: Permite al usuario obtener un perfil específico utilizando el ID
        del usuario y el ID del perfil.
      operationId: getProfileById
      parameters:
      - description: ID del usuario del cual se desea obtener el perfil
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del perfil que se desea obtener
        explode: false
        in: path
        name: profileID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Perfil obtenido con éxito
        "404":
          description: Perfil no encontrado
        "400":
          description: ID de usuario o perfil inválido proporcionado
      summary: Obtiene un perfil existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    post:
      description: Permite al usuario editar un perfil existente utilizando el ID
        del usuario y el ID del perfil.
      operationId: editProfile
      parameters:
      - description: ID del usuario del cual se desea editar el perfil
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID del perfil que se desea editar
        explode: false
        in: path
        name: profileID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
        description: Datos del perfil que se actualizarán
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: Perfil actualizado con éxito
        "400":
          description: ID de usuario o perfil inválido proporcionado
        "404":
          description: Perfil no encontrado
        "422":
          description: Error de validación (datos incorrectos)
      summary: Edita un perfil existente
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/lists:
    get:
      description: Recupera todas las listas que ha creado un usuario específico.
      operationId: getUserLists
      parameters:
      - description: ID del usuario cuyas listas se desean recuperar
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/List'
                type: array
          description: Listas recuperadas con éxito
        "404":
          description: Usuario no encontrado
      summary: Obtiene todas las listas de un usuario
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list:
    post:
      description: Añade una nueva lista a la plataforma
      operationId: addList
      parameters:
      - description: ID del usuario que quiere añadir la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
        description: Datos de la nueva lista a crear
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Lista creada con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "409":
          description: Conflicto (la lista ya existe)
      summary: Crea una nueva lista
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list/{listID}:
    delete:
      description: Borra una lista de la plataforma
      operationId: deleteList
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a eliminar
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteList_200_response'
          description: Lista eliminada exitosamente
        "400":
          description: Solicitud inválida (ID de lista no proporcionado o incorrecto)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (la lista no se puede eliminar)
      summary: Elimina una lista existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    get:
      description: Recupera la información de la lista mediante su ID.
      operationId: getList
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a modificar
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Detalles de la lista recuperados con éxito
        "404":
          description: Lista no encontrada
      summary: Obtiene los detalles de una lista específica
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    put:
      description: Modifica los datos de una lista ya creada en la plataforma
      operationId: editList
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a modificar
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
        description: Datos de la lista a modificar
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: Lista editada con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (la lista no se puede editar)
      summary: Edita una lista existente
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/getSuscripcionPlan:
    get:
      description: Obtiene la información del plan de suscripción actual contratado
        por el usuario.
      operationId: getSuscripcionPlan
      parameters:
      - description: ID del usuario que desea consultar su plan de suscripción
        explode: false
        in: path
        name: userID
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuscripcionPlan'
          description: Plan de suscripción recuperado con éxito
        "400":
          description: Solicitud inválida (falta el ID del usuario)
        "404":
          description: No se encontró un plan de suscripción para el usuario
        "500":
          description: Error interno del servidor al procesar la solicitud
      summary: Ver Plan de Suscripción Contratado
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/hireSuscripcionPlan:
    post:
      description: Añade un plan de suscripción de la plataforma al usuario
      operationId: hireSuscripcionPlan
      parameters:
      - description: ID del usuario que desea consultar su plan de suscripción
        explode: false
        in: path
        name: userID
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuscripcionPlan'
        description: Datos del plan de suscripción a contratar
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuscripcionPlan'
          description: Plan de suscripción contratado con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "409":
          description: Conflicto (el plan de suscripción ya está contratado)
      summary: Contrata un Plan de Suscripción
      tags:
      - user
      x-content-type: application/json
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/cancelSuscripcionPlan:
    delete:
      description: Cancela el plan de suscripción activo del usuario.
      operationId: cancelSuscripcionPlan
      parameters:
      - description: ID del usuario que desea cancelar el plan
        explode: false
        in: path
        name: userID
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cancelSuscripcionPlan_200_response'
          description: Plan de suscripción cancelado con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: No se encontró el plan de suscripción para este usuario
        "500":
          description: Error interno del servidor al procesar la solicitud
      summary: Dar de baja un Plan de Suscripción
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list/{listID}/film/{filmID}:
    delete:
      description: Permite elimnar una pelicula de una lista
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la pelicula
        explode: false
        in: path
        name: filmID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: Pelicula eliminada de la lista
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Elimina una pelicula de una lista
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    post:
      description: Permite agregar nuevas peliculas a una lista específica.
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la pelicula
        explode: false
        in: path
        name: filmID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: Contenido añadido a la lista con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Añade pelicula a una lista existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list/{listID}/serie/{serieID}:
    delete:
      description: Permite eliminar una serie de una lista
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la serie
        explode: false
        in: path
        name: serieID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: Serie eliminada de la lista
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Elimina una serie de una lista
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
    post:
      description: Permite agregar nuevas series a una lista específica.
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la serie
        explode: false
        in: path
        name: serieID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: Contenido añadido a la lista con éxito
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Añade serie a una lista existente
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list/{listID}/films:
    get:
      description: Devuelve las peliculas de una lista
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FilmList'
                type: array
          description: Peliculas de lista devueltas
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Obtiene peliculas de una lista
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
  /user/{userID}/list/{listID}/series:
    get:
      description: Devuelve las series de una lista
      parameters:
      - description: ID del usuario que posee la lista
        explode: false
        in: path
        name: userID
        required: true
        schema:
          type: integer
        style: simple
      - description: ID de la lista a la que se desea añadir contenido
        explode: false
        in: path
        name: listID
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SeriesList'
                type: array
          description: Series de lista devueltas
        "400":
          description: Solicitud inválida (datos incompletos o incorrectos)
        "404":
          description: Lista no encontrada
        "409":
          description: Conflicto (no se puede añadir el contenido a la lista)
      summary: Obtiene series de una lista
      tags:
      - user
      x-accepts:
      - application/json
      x-tags:
      - tag: user
components:
  schemas:
    User:
      example:
        createdAt: 2023-10-09T10:20:30Z
        password: 1e34r
        preferences:
        - 1
        - 3
        - 4
        name: Juan Pérez
        userID: 1
        email: juan.perez@example.com
        username: juanperez
      properties:
        userID:
          description: ID único del usuario
          example: 1
          type: integer
        username:
          description: Nombre de usuario
          example: juanperez
          type: string
        password:
          description: Contraseña
          example: 1e34r
          type: string
        email:
          description: Dirección de correo electrónico del usuario
          example: juan.perez@example.com
          format: email
          type: string
        name:
          description: Nombre completo del usuario
          example: Juan Pérez
          type: string
        createdAt:
          description: Fecha y hora en que se creó el usuario
          example: 2023-10-09T10:20:30Z
          format: date-time
          type: string
        preferences:
          description: Array con los id's de géneros de contenido que le gustan al
            usuario
          example:
          - 1
          - 3
          - 4
          items:
            type: integer
          type: array
      required:
      - createdAt
      - email
      - name
      - preferences
      - userID
      - username
      type: object
    PaymentMethod:
      example:
        cardHolderName: Juan Pérez
        paymentID: 12345
        userID: 12345
        cardNumber: 4111111111111111
        expirationDate: 2000-01-23
      properties:
        paymentID:
          description: ID único del método de pago
          example: 12345
          type: integer
        userID:
          description: ID de usuario
          example: 12345
          type: integer
        cardNumber:
          description: Número de la tarjeta de crédito/débito
          example: 4111111111111111
          type: integer
        expirationDate:
          description: Fecha de expiración de la tarjeta en formato YYYY-MM
          format: date
          type: string
        cardHolderName:
          description: Nombre del titular de la tarjeta
          example: Juan Pérez
          type: string
      required:
      - cardHolderName
      - cardNumber
      - expirationDate
      - paymentID
      - userID
      type: object
    Profile:
      example:
        createdAt: 2023-10-09T10:20:30Z
        avatarURL: https://example.com/avatars/avatar1.png
        profileID: 2
        name: Perfil Principal
        type: adult
        userID: 2
      properties:
        profileID:
          description: ID único del perfil
          example: 2
          type: integer
        userID:
          description: ID usuario
          example: 2
          type: integer
        name:
          description: Nombre del perfil
          example: Perfil Principal
          type: string
        type:
          description: Tipo de perfil. Puede ser "adult" o "child".
          enum:
          - adult
          - child
          example: adult
          type: string
        avatarURL:
          description: URL de la imagen de avatar del perfil
          example: https://example.com/avatars/avatar1.png
          format: uri
          type: string
        createdAt:
          description: Fecha y hora en que se creó el perfil
          example: 2023-10-09T10:20:30Z
          format: date-time
          type: string
      required:
      - avatarURL
      - createdAt
      - name
      - profileID
      - type
      - userID
      type: object
    List:
      example:
        listID: 101
        films:
        - 1
        - 1
        createdAt: 2023-10-09T10:00:00Z
        series:
        - 1
        - 1
        name: Mis Series Favoritas
        userID: 101
      properties:
        listID:
          description: Identificador único de la lista
          example: 101
          type: integer
        userID:
          description: ID del usuario
          example: 101
          type: integer
        name:
          description: Nombre de la lista
          example: Mis Series Favoritas
          type: string
        films:
          description: Peliculas contenidas en la lista
          items:
            description: ID de película
            example: 1
            type: integer
          type: array
        series:
          description: Series contenidas en la lista
          items:
            description: ID de serie
            example: 1
            type: integer
          type: array
        createdAt:
          description: Fecha y hora de creación de la lista
          example: 2023-10-09T10:00:00Z
          format: date-time
          type: string
      required:
      - createdAt
      - films
      - listID
      - name
      - series
      - userID
      type: object
    SuscripcionPlan:
      example:
        endDate: 2024-12-31
        paymentID: 1
        planID: 5
        userID: 1
        startDate: 2024-01-01
      properties:
        planID:
          description: ID único del plan de suscripción
          example: 5
          type: integer
        userID:
          description: ID del usuario que contrata el plan
          example: 1
          type: integer
        startDate:
          description: Fecha de inicio del plan de suscripción
          example: 2024-01-01
          format: date
          type: string
        endDate:
          description: Fecha de finalización del plan de suscripción
          example: 2024-12-31
          format: date
          type: string
        paymentID:
          description: Método de pago utilizado para contratar el plan
          example: 1
          type: integer
      required:
      - endDate
      - paymentID
      - planID
      - startDate
      - userID
      type: object
    FilmList:
      example:
        filmID: 1
        title: El Señor de los Anillos
      properties:
        filmID:
          description: ID de la pelicula
          example: 1
          type: integer
        title:
          description: Nombre de la pelicula
          example: El Señor de los Anillos
          type: string
      type: object
    SeriesList:
      example:
        serieID: 1
        title: El Señor de los Anillos
      properties:
        serieID:
          description: ID de serie
          example: 1
          type: integer
        title:
          description: Nombre de la serie
          example: El Señor de los Anillos
          type: string
      type: object
    deleteUser_200_response:
      example:
        message: Usuario eliminado exitosamente.
      properties:
        message:
          example: Usuario eliminado exitosamente.
          type: string
      type: object
    logoutUser_200_response:
      example:
        message: Sesion cerrada exitosamente.
      properties:
        message:
          example: Sesion cerrada exitosamente.
          type: string
      type: object
    deletePaymentMethod_200_response:
      example:
        message: Metodo de pago eliminado exitosamente.
      properties:
        message:
          example: Metodo de pago eliminado exitosamente.
          type: string
      type: object
    deleteProfile_200_response:
      example:
        message: Perifl eliminado exitosamente.
      properties:
        message:
          example: Perifl eliminado exitosamente.
          type: string
      type: object
    deleteList_200_response:
      example:
        message: Lista eliminada exitosamente.
      properties:
        message:
          example: Lista eliminada exitosamente.
          type: string
      type: object
    cancelSuscripcionPlan_200_response:
      example:
        message: El plan de suscripción ha sido cancelado exitosamente.
      properties:
        message:
          description: Mensaje de confirmación
          example: El plan de suscripción ha sido cancelado exitosamente.
          type: string
      type: object
